"""empty message

Revision ID: 819d8b54dd86
Revises: 
Create Date: 2020-04-24 17:01:13.333289

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '819d8b54dd86'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_import_path', sa.Text(), nullable=False),
    sa.Column('template_path', sa.Text(), nullable=False),
    sa.Column('persistence_path', sa.Text(), nullable=False),
    sa.Column('short_name', sa.Text(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('category', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('submission_deadline_end', sa.DateTime(), nullable=True),
    sa.Column('submission_deadline_start', sa.DateTime(), nullable=True),
    sa.Column('submission_test_enabled', sa.Boolean(), nullable=False),
    sa.Column('max_grading_points', sa.Integer(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('build_job_result', sa.Text(), nullable=True),
    sa.Column('build_job_status', sa.Enum('NOT_BUILD', 'BUILDING', 'FINISHED', 'FAILED', name='exercisebuildstatus'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('persistence_path'),
    sa.UniqueConstraint('template_path')
    )
    op.create_table('system_setting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('value', sa.PickleType(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('exercise_entry_service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('persistance_container_path', sa.Text(), nullable=True),
    sa.Column('files', sa.PickleType(), nullable=True),
    sa.Column('build_cmd', sa.PickleType(), nullable=True),
    sa.Column('disable_aslr', sa.Boolean(), nullable=False),
    sa.Column('cmd', sa.PickleType(), nullable=False),
    sa.Column('readonly', sa.Boolean(), nullable=False),
    sa.Column('allow_internet', sa.Boolean(), nullable=False),
    sa.Column('flag_path', sa.Text(), nullable=True),
    sa.Column('flag_value', sa.Text(), nullable=True),
    sa.Column('flag_user', sa.Text(), nullable=True),
    sa.Column('flag_group', sa.Text(), nullable=True),
    sa.Column('flag_permission', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercise_service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('files', sa.PickleType(), nullable=True),
    sa.Column('build_cmd', sa.PickleType(), nullable=True),
    sa.Column('disable_aslr', sa.Boolean(), nullable=False),
    sa.Column('cmd', sa.PickleType(), nullable=False),
    sa.Column('readonly', sa.Boolean(), nullable=True),
    sa.Column('allow_internet', sa.Boolean(), nullable=True),
    sa.Column('flag_path', sa.Text(), nullable=True),
    sa.Column('flag_value', sa.Text(), nullable=True),
    sa.Column('flag_user', sa.Text(), nullable=True),
    sa.Column('flag_group', sa.Text(), nullable=True),
    sa.Column('flag_permission', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login_token', sa.Text(), nullable=True),
    sa.Column('first_name', sa.Text(), nullable=False),
    sa.Column('surname', sa.Text(), nullable=False),
    sa.Column('nickname', sa.Text(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.Column('mat_num', sa.Text(), nullable=False),
    sa.Column('registered_date', sa.DateTime(), nullable=False),
    sa.Column('pub_key', sa.Text(), nullable=False),
    sa.Column('pub_key_ssh', sa.Text(), nullable=False),
    sa.Column('priv_key', sa.Text(), nullable=True),
    sa.Column('course_of_studies', sa.Enum('BACHELOR_ITS', 'MASTER_ITS_NS', 'MASTER_ITS_IS', 'MASTER_AI', 'OTHER', name='courseofstudies'), nullable=True),
    sa.Column('auth_groups', sa.PickleType(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['user_group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mat_num'),
    sa.UniqueConstraint('nickname')
    )
    op.create_table('exercise_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('network_id', sa.Text(), nullable=True),
    sa.Column('peripheral_services_internet_network_id', sa.Text(), nullable=True),
    sa.Column('peripheral_services_network_id', sa.Text(), nullable=True),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('creation_ts', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('network_id'),
    sa.UniqueConstraint('peripheral_services_internet_network_id'),
    sa.UniqueConstraint('peripheral_services_network_id')
    )
    op.create_table('grading',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('points_reached', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('private_note', sa.Text(), nullable=True),
    sa.Column('last_edited_by_id', sa.Integer(), nullable=False),
    sa.Column('update_ts', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_ts', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['last_edited_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercise_instance_entry_service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instance_id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['instance_id'], ['exercise_instance.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('container_id')
    )
    op.create_table('instance_service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('exercise_service_id', sa.Integer(), nullable=False),
    sa.Column('instance_id', sa.Integer(), nullable=False),
    sa.Column('container_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_service_id'], ['exercise_service.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['instance_id'], ['exercise_instance.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('container_id'),
    sa.UniqueConstraint('instance_id', 'exercise_service_id')
    )
    op.create_table('submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origin_instance_id', sa.Integer(), nullable=False),
    sa.Column('submitted_instance_id', sa.Integer(), nullable=False),
    sa.Column('submission_ts', sa.DateTime(), nullable=False),
    sa.Column('grading_id', sa.Integer(), nullable=True),
    sa.Column('test_output', sa.Text(), nullable=True),
    sa.Column('test_passed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['grading_id'], ['grading.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['origin_instance_id'], ['exercise_instance.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['submitted_instance_id'], ['exercise_instance.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('submission')
    op.drop_table('instance_service')
    op.drop_table('exercise_instance_entry_service')
    op.drop_table('grading')
    op.drop_table('exercise_instance')
    op.drop_table('user')
    op.drop_table('exercise_service')
    op.drop_table('exercise_entry_service')
    op.drop_table('user_group')
    op.drop_table('system_setting')
    op.drop_table('exercise')
    # ### end Alembic commands ###
